name: Build and Deploy

on:
  push:
    branches:
      - main
  schedule:
    - cron: "5 0 * * *"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Install lftp
        env:
          FTP_HOST: ${{ secrets.FTP_HOST }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: sudo apt-get install -y lftp

      - name: Copy reviews.json
        run: |
          echo "Kopiowanie reviews.json"
          lftp -f "
          open ftp://${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}@${{ secrets.FTP_HOST }}
          set xfer:clobber on
          cd /public_html/data/serwis
          cls reviews.json && (
            mkdir -p /public_html/serwis
            mkdir -p /public_html/serwis/api
            get reviews.json -o reviews.json
            put reviews.json -o /public_html/serwis/api/reviews.json
            put reviews.json -o /public_html/data/serwis/reviewsCopy.json
          ) || echo 'Plik reviews.json nie istnieje. Operacja pominięta.'
          quit
          "

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm ci || npm install

      - name: Build the application
        env:
          NEXT_PUBLIC_SERVICE_ID: ${{ secrets.SERVICE_ID }}
          NEXT_PUBLIC_TEMPLATE_ID: ${{ secrets.TEMPLATE_ID }}
          NEXT_PUBLIC_PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
          NEXT_PUBLIC_GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          NEXT_PUBLIC_PLACE_ID: ${{ secrets.PLACE_ID }}
        run: npm run build

      - name: Deploy to FTP
        run: |
          lftp -f "
          open ftp://${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}@${{ secrets.FTP_HOST }}
          lcd ./out
          mirror -R . /public_html/serwis_new
          quit
          "

      - name: Set copy folder name
        run: echo "COPY_FOLDER_NAME=serwis_$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Rename directories
        run: |
          echo "Zmienianie nazw katalogów"
          lftp -f "
          open ftp://${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}@${{ secrets.FTP_HOST }}
          set xfer:clobber on
          mv /public_html/serwis /public_html/${{ env.COPY_FOLDER_NAME }}
          mv /public_html/serwis_new /public_html/serwis
          quit
          "
