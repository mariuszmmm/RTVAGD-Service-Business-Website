name: Aktualizuj opinie z Google

# Uruchamiaj co godzinę (UTC). Jeśli chcesz inny interwał, zmodyfikuj cron.
on:
  schedule:
    # - cron: "0 */12 * * *"  # co 12 godzin
    # - cron: "0 */1 * * *"  # co 1 godzin
    - cron: "0 */10 * * *" # co 10 min

  workflow_dispatch: # umożliwia ręczne uruchomienie

permissions:
  contents: write

jobs:
  update-opinie:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout kodu
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # potrzebujemy całej historii, by móc commity pushować

      # 2. Ustaw Node.js
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # 3. Instalacja zależności
      - name: Instaluj zależności (npm install)
        run: npm install

      # 4. Przekazanie Google API Key jako zmiennej ENV
      - name: Ustaw zmienną GOOGLE_API_KEY
        run: |
          echo "NEXT_PUBLIC_GOOGLE_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_API_KEY }}" >> $GITHUB_ENV

      # 5. Uruchomienie skryptu Node.js (aktualizacja opinie.json)
      - name: Uruchom update_data.js
        run: npm run update-data

      - name: Debug – sprawdź czy plik data.json istnieje
        run: |
          echo "Pliki w repo:"
          ls -la
          echo "Zawartość data.json:"
          cat data.json || echo "data.json nie istnieje"

      # 6. Commit i push zmian w opinie.json (jeśli zaszły)
      - name: Commit i Push zmian w data.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add data.json
          if git diff --cached --quiet; then
            echo "Brak zmian w data.json – nic do commitowania."
          else
            git commit -m "Automatyczna aktualizacja danych: $(date -u '+%Y-%m-%d %H:%M UTC')"
            git push origin HEAD:serwis-for-netlify
          fi
